{"pages":[{"tags":"CS","url":"https://azzamsa.github.io/kumpulan-panduan-emacs-berbahasa-idonesia.html","text":"Tedapat beberapa panduan Emacs berbahasa Indonesia. Saya kumpulkan pranalanya di sini agar memudahkan pencariannya. Dokumentasi Emacs Bahasa Indonesia oleh Kholid Fuadi Emacs, Bukan Editor Teks Biasa oleh Rio Andita Setiabakti Panduan Dasar Emacs Untuk Pemula oleh Ade Malsasa Akbar","loc":"https://azzamsa.github.io/kumpulan-panduan-emacs-berbahasa-idonesia.html","title":"Kumpulan Panduan Emacs Berbahasa Idonesia"},{"tags":"CS","url":"https://azzamsa.github.io/perjalanan-mencari-tempat-magang.html","text":"Memasuki awal semester enam, saya bersiap-siap mencari tempat untuk magang. Hiruk pikuk kawan-kawan melakukan hal yang sama, meski tak semua. Ricky Irfandi pun saya temui, sahabat yang banyak mengajari dan menemani di awal pendakian belajar pemrograman. Kami berdiskusi ke mana akan magang. Sejauh apa progres belajar bidang yang kami tempuh pun tak lepas dari diskusi. Mengingat kami sekarang sudah terpisah karena keminatan. Saya merenung kembali apa yang dapat saya kontribusikan sekaligus memilih area of interest yang akan saya dalami kedepannya. Lisp mendominasi hidup saya pada semester itu. Hingga dua tugas akhir mata kuliah saya kerjakan dan presentasikan dengan Lisp. Buku-bukunya tak pernah jauh dari mata. Di setiap tempat dan waktu. Mulai dari menunggu adzan, antrian, menunggu teman hingga do number two . Benar, hampir gila saya dibuatnya. Sesak nafas dengan Lisp tentu membuat saya ingin menggunakannya sebagai alat untuk berkontribusi dan berkarya. Keputusan untuk magang dengan Lisp di tangan menguat. Sayangnya, pencarian tak membuahkan hasil. Tak ada startup maupun corporate di Indonesia yang menggunakan Common Lisp. Pilihan tertuju pada kerja remote di luar negeri. Setelah bertanya di forum, saya pun mendapat petunjuk lamaran junior software engineer yang dibuka. Diantaranya RavenPack dan Rigetti . Tetapi keduanya sepertinya tidak menerima remote work untuk posisi junior dev . Akhirnya saya mundur dan melebarkan opsi pada Lisp family . Saran yang di dapat yaitu Clojure yang digunakan di go-pay. Pikiran saya berubah. Lisp sepertinya tidak terlalu dilirik corporate pada umumnya. ‘Keindahannya' cukup membuat Yahoo dan Reddit mengubah codebase aplikasinya. Hingga akhirnya saya bepikir. \"Bahasa alien sudah di tangan. Saatnya saya membuka mata untuk menguasai bahasa manusia\". \" Bahasa alien sudah di tangan. Saatnya saya membuka mata untuk menguasai bahasa manusia.\" Java sudah tentu tidak masuk dalam daftar kandidat. There is nothing wrong with java . Tetapi Entahlah sulit sekali hati ini menerimanya (mungkin hal ini akan menjadi tulisan di lain waktu). Kandidat tersisa Python dan Ruby. Menghabiskan waktu untuk meriset mana yang akan saya pilih. Akhirnya, pilihan jatuh pada Python. Banyak yang menyampaikan bahwa kita tidak usah ambil pusing dalam memilih bahasa pada awal belajar pemrograman. Tetapi bagi saya, saya harus memiliki beberapa alat di tangan yang benar-benar saya dalami hingga akarnya. Bahkan kalau bisa, hingga menjadi core-developer nya (apa salahnya bermimpi). Pemilihan Python tentu tidak berakhir begitu saja. Saya awali dengan kesyukuran. Telah memiliki cinta kasih baru yang harus saya geluti dan dalami. Dilanjutkan dengan mempelajari syntax dasar. Membaca dan mengerjakan latihan buku pemula, mengerjakan soal di online code judge dan terus berlatih. Mencintai perkakas yang kita gunakan saya rasa tidak ada salahnya. Cinta boleh, fanatik jangan. \" Language is not a wife, it is not the one that you should hug forever in your life. Don't afraid to leave and take the new one, leave does not mean you loose it, you just put it in your toolbox. The vary weapon (paradigm) you learn, the better knight you become.\" — azzamsa Tatkala proses pembelajaran dan penguasaan skill Python pemula saya rasa melebihi 50%. Segera saya mencari tempat magang yang banyak menggunakan Python dalam tech stack nya. Python merupakan bahasa yang cukup populer. Daftar pilihan tempat magang tentu sangatlah banyak. Beberapa startup besar bermunculan. Saya terus mencari tempat yang saya rasa cocok. Artikel selanjutnya dapat anda baca di sini","loc":"https://azzamsa.github.io/perjalanan-mencari-tempat-magang.html","title":"Perjalanan Mencari Tempat Magang"},{"tags":"CS","url":"https://azzamsa.github.io/pengalaman-magang-di-biznetgio.html","text":"Hari demi hari pencarian perusahaan pengguna Python berjalan. BiznetGio pun muncul. Bahkan saya mendengarnya langsung dari penggiat perangkat lunak bebas di Indonesia. Tentu saya berdecak kagum. Tak dapat membayangkan benarkah mimpi itu bukan ilusi semata. Mimpi kelak bekerja di perusahaan dengan mindset dan lingkungan FOSS . Bagi saya, hal seperti itu di Indonesia hanya sebuah mimpi. Bekerja di perusahaan yang memiliki mindset FOSS dan menggunakan lisensi bebas bahkan untuk core application nya. Tak percaya, saya mencoba konfirmasi ulang. Benar saja, saya mendapatkan pranala menuju beberapa aplikasinya di salah satu source code hosting dengan akses public dan berlisensi MIT . Kaget, kagum dan penasaran bercampur aduk. Bagaimana mungkin ada perusahaan di sekitar saya yang memiliki mindset FOSS seperti ini. Ingin berteriak syukur tetapi diri sedang di perpustakaan kampus. Segera saya mencari Fadlun Akbar. Kakak tingkat yang sangat aktif di ekosistem FOSS . Kami berdiskusi, saya meminta nasehat tentang pilihan tempat yang akan saya ambil. Tentu saya tau pasti bahwa startup besar pada daftar kandidat tempat magang tersebut memberikan kompensasi dalam jumlah yang besar. Tetapi hati tetap tertuju pada tempat dengan mindset dan ekosistem FOSS yang tinggi. Ditambah bonus tak ternilai seorang mentor yang saya tau (bukan kenal, karena beliau tidak tau saya) sejak lama merupakan sosok penting dalam perkembangan maupun gerakan perangkat lunak bebas di Indonesia. Setidaknya, kala itu saya berpikir. Bagaimana keren nya jika saya bisa belajar bersama beliau, melihat bagaimana beliau bekerja, dan yang terpenting, hasil pekerjaan saya akan digunakan banyak orang dengan lisensi bebas. Sungguh aroma syurgawi . Saya pun diminta untuk mengirim cv dan pranala akun github (bukan LinkedIn !). Tak lepas terselip di dalamnya alamat situs portofolio saya. Berbekal kontribusi pada beberapa proyek perangkat lunak bebas. Baik dalam bentuk ide/ feature request , bug maupun code. Saya sedikit percaya diri untuk diterima. Sembilan hari menunggu. Surel balasan sampai dengan penjelasan bahwa saya diterima. Tinggal mengurus surat-surat administratifnya saja. Alhamdulillah. Tiga bulan berlalu. Saya pun bertolak ke jakarta untuk pertama kali. Bersyukur mendapatkan kos yang cukup dekat dengan kantor BiznetGio. Dengan bantuan Ahmad Hakeal. Sahabat lama di Gontor dulu. Hari pertama diawali dengan briefing bersama HRD BiznetGio kala itu, Mbak Tiara. Saya menerima akun untuk mengakses MS teams (yang tidak pernah saya gunakan selama magang), dijelaskan jam kerja dan lingkungan kantor. Tentu tak lepas dari adanya pantry dan minuman yang dapat diambil setiap harinya. Tak lama kemudian, saya diajak berkeliling kantor seraya berkenalan dengan beberapa software engineer lain. Siang itu kali pertama saya bertemu pak Ibnu secara langsung. Orang yang sudah saya tau sejak dulu. Andai saya manusia yang berdiri di kejauhan. Saya pun bangga dengan kemauan seorang azzamsa muda yang menghubungi secara langsung orang-orang yang menginspirasinya. Tak disangka, sungguh tak disangka orang yang membuatnya amazed tiga tahun sebelumnya, kini menjadi mentornya. Berkerja dan berkolaborasi secara langsung. Chat pendek tersebut benar-benar menjadi artefak tak ternilai. Saksi bisu perjuangan awal belajar pemrograman. \"Semoga saya bisa bermanfaat seperti mas dalam bidang Computer Science\" Kantin midplaza menjadi tempat awal kami bercengkrama. Berdiskusi segala hal yang akan dilakukan selama dua bulan ke depan. Tentu didalamnya kami diskusi teknologi terkini di dunia FOSS . Dengan tambahan diskusi filosofi serta tokoh-tokoh FOSS yang menjadi bumbu di siang itu. Sungguh saya merasa lebur ketika bercengkrama dengan pak Ibnu. Layaknya teman yang sudah lama kenal. Mungkin karena kami berdua cinta akan apa yang disebut ‘kontribusi'. Pengalaman sehari-hari yang saya alami tentu tidak cukup untuk diceritakan semua di sini. Setiap hari saya berproses. Diskusi, belajar, berbagi dan tentu tak lepas dari bercanda. Saya tipikal makhluk yang tidak terlalu ekspresif maupun suka bercanda. Tetapi tim pak ibnu yang beranggotakan empat orang termasuk saya dan pak ibnu. Tidak pernah lepas dari canda. Tentu saya harus melebur dan mencari sticker untuk saya gunakan pertama kali di Telegram . pak Ibnu sangat kental dengan humor khasnya. Mungkin Richard Feynman benar. Have a sense of humor . Entah begitu tingginya antusias saya dalam tim ini. Hingga hari terakhir magang pun, seringkali saya mengambil screenshot pada telegram sebelum badge counter chat-chat itu hilang karena dibuka. Tak sabar ingin membaca topik apa yang sedang dibicarakan. Banyak hal yang saya pelajari dari sosok pak Ibnu. Dengan tingkat keilmuan sedalam itu. Saya belum pernah melihat ia mencemooh hasil kerja kami. Ucapan yang tak pernah lepas darinya: \" nice, nice \". Saya tau, dengan kaliber setingkat itu, tentu dia dapat melakukannya lebih baik dari pada kami. Tetapi tidak pernah keluar dari lisannya cemoohan. Ini hal yang paling berkesan bagi saya. Ia membina kami layaknya keluarga. Orang yang tak kenal kami, tentu tak akan pernah tau mana atasannya. Ia membaur bersama kami. Tak segan anak buahnya memanggilnya ‘om'. Termasuk saya. Sir Ibnu, you rock!. Ciri khas Ibnu leadership sepertinya tidak berhenti disini. Tak jarang saya melihat pak Ibnu berdiskusi dan bercanda bersama atasannya layaknya teman akrab. Saya bersyukur bisa berada di lingkungan ini. Mungkin rasa keakraban itu memang tak hanya ada pada tim kami. Saya tak tau apa yang dirasakan teman lainnya. Tetapi selama dua bulan. Tak pernah saya merasa ada beban. Munkin saja, pak Ibnu itu seorang dukun. Bisa jadi kami di pelet olehnya. Grup telegram itu tak pernah mengenal jam dan hari, sabtu ataupun minggu, midnight ataupun midday . Grup itu akan terus penuh dengan diskusi arsitektur, fitur serta bug yang ada pada project kami. Canda menjadi penyedap yang tidak akan pernah lepas. Syukurlah saya sudah mengunduh telegram sticker . Bisa jadi pak Ibnu memang seorang dukun. Dukun leadership . Kami tak memiliki stand-up meeting layaknya kebanyakan tempat lain. Kami diberi kebebasan mengerjakan dari tempat mana pun. Terdengar unik memang. Tetapi anehnya, kinerja teman-teman di tim sangat baik. Bahkan diskusi sepertinya sudah menjadi part of our life . Jika bergantinya malam dan siang, tidak menjadi batasan untuk commit . Diskusi yang tak kenal tempat dan waktu. Saya rasa 8 hours sudah tidak menjadi urusan. Team leader adalah orang yang paling tau dan paling bisa membentuk rules selama pengembangan perangkat lunak. Tidak ada software development methodologies yang bekerja tanpa di kostumisasi karena setiap orang, tempat dan proyek tidak akan pernah sama. Saya rasa pak Ibnu menganut hal ini. \"Customized development method\" . Hari-hari terlewati penuh dengan diskusi, berbagi dan belajar bersama. Kami berbagi ide-ide menulis idiomatic code , algoritme yang lebih efisien dan banyak hal lain. Traktiran makan per minggu dari pak Ibnu selalu penuh dengan diskusi ringan tak lepas dari canda. Sungguh hari-hari yang sangat menyenangkan. Bisa jadi pak Ibnu memang dukun leadership. Tetapi semangat membara itu mungkin tak pernah padam karena proyek itu sesuai dengan idealisme kami. Proyek perangkat lunak bebas. Saya sangat berbahagia di dalam setiap commit nya. Terimakasih BiznetGio. Mimpi itu kini sudah menjadi nyata. Tak lagi ilusi. Great manager , ability to work remotely plus Libre Software licesed project . what a breeze . Tiga komponen yang membuat decak kagum dan kesyukuran selama magang di BiznetGio. Great manager , ability to work remotely , plus Libre Software licesed project . What a breeze . Ada pertemuan tentu akan ada perpisahan. Minggu terakhir grup telegram sudah bersuasana haru. Kehilangan seorang sahabat yang akan kembali melanjutkan studi setelah magang. Akhir minggu itu seringkali pak Ibnu melantunkan doa dan perpisahan, padahal saya masih tinggal seminggu lagi. Sebelum kami benar-benar berpisah. Kami bersyukur atas perjalanan ini dengan sebuah closing-tasyakuran Setiap hari di minggu terakhir. Kami menghabiskan waktu bersama hingga malam. Diskusi dan bercanda ria di ‘mabes'. Begitu saya menyebutnya pada pak Ibnu dan teman di tim. Jauh sebelum perpisahan ini. Seringkali saya sampaikan kepada beliau bahwa tempat tidak akan pernah menjadi pembatas. Selama proyek tersebut berlisensi bebas. Tentu saya sangat siap untuk berkontribusi. Selain karena ide yang ingin saya implementasikan. Kontribusi tidak akan pernah lepas selama hayat masih dikandung badan. Stasiun Senen menjadi saksi bisu perpisahan kami yang penuh chat haru di telegram. Ditemani hujan rintik. Artikel sebelumnya dapat anda baca di sini This post is not sponsored by Biznet Gio. All views and opinions are my own","loc":"https://azzamsa.github.io/pengalaman-magang-di-biznetgio.html","title":"Pengalaman Magang di BiznetGio"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/photo-fs-anywhere.html","text":"On any meeting point … On college street … On college corener …","loc":"https://azzamsa.github.io/photo-fs-anywhere.html","title":"[Photo Gallery] Libre Software Anywhere"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/projects-college.html","text":"Code dokterkucing - Simple Cat Disease Detector Built with: Common Lisp, Caveman2, Bootsrap, and others . amiserious - Simple seriousness checker using Naive Bayes algorithm. Built with: Common Lisp, Caveman2, Bootsrap, and others . fhadir - Show attendance list of FILKOM lecturers Built with: Javascript, Apache Cordova FilPlay Filkom Video Player Built with: Java, VLCj","loc":"https://azzamsa.github.io/projects-college.html","title":"College Projects"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/prs-gather.html","text":"","loc":"https://azzamsa.github.io/prs-gather.html","title":"[Photo Gallery] POROS Gathering"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/diklat-prs.html","text":"","loc":"https://azzamsa.github.io/diklat-prs.html","title":"[Photo Gallery] Diklat POROS"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/photo-gallery-lugos-man-1.html","text":"","loc":"https://azzamsa.github.io/photo-gallery-lugos-man-1.html","title":"[Photo Gallery] LUGOS MAN 1"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/photo-pm.html","text":"","loc":"https://azzamsa.github.io/photo-pm.html","title":"[Photo Gallery] Pondok Mahasiswa"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/projects-contributed.html","text":"Major neo-cli - Agnostic Orchestration Tools for Openstack Built with: Python, and others Minor Prelude - Prelude is an enhanced Emacs 24.4+ distribution that should make your experience with Emacs both more pleasant and more powerful. Built with: Elisp Gundala - EPP Client Library Built with: Python lisp-lang.org - Common Lisp homepage Built with: jekyll (Ruby) lisp-lang.org - A responsive, minimal, and stylish theme for Pelican Built with: Python, HTML , CSS . Translation Anuto - Another ugly tower defense for Android Loop Habit Tracker - Loop Habit Tracker, an Android app for creating and maintaining good habits Non-Code Contribution awesome-emacs - A community driven list of useful Emacs packages, libraries and others. awesome-cl - A curated list of awesome Common Lisp frameworks, libraries and other shiny stuff. Awesome-Linux-Software - A list of awesome applications, software, tools and other materials for Linux distros. Ideas I contributed ideas too :). Here of my ideas that had been implemented to core app. Per-site link formatting | org-cliplink Add timestamp to note content | omni-notes Discussion to make silentcast work in i3mw | silentcast","loc":"https://azzamsa.github.io/projects-contributed.html","title":"Free Software Contribution"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/writing.html","text":"Academic Publications Journals Irawan, E.T., Bappedyanto, D., Hariyadi, D. and Aziz, A.S. , BIZNET QUERY LANGUAGE PADA INFRASTRUCTURE AS CODE Link Essays DISTRIBUTED VERSION CONTROL DAN OPEN FORMAT SEBAGAI SOLUSI PERMASALAHAN PADA TUGAS KOLABORATIF DI UNIVERSITAS . Link","loc":"https://azzamsa.github.io/writing.html","title":"Writings"},{"tags":"Life","url":"https://azzamsa.github.io/mengatur-berkas-referensi.html","text":"Mengatur Berkas Referensi Tatkala sesuatu muncul di otak. Saya meletakkannya di inbox . Kemudian diproses menggunakan sistem GTD . Sehingga isinya terbagi kedalam berkas project , someday dan referensi . Saya menggunakan alur yang berbeda untuk mengatur berkas referensi . Sehingga sistem GTD yang saya gunakan tidak hanya untuk mengatur todo . Tetapi untuk mengatur seluruh hidup saya. Saya mengatur hal-hal yang masuk pada kategori referensi sedemikian sehingga saya dapat menjawab pertanyaan-pertanyaan berikut : Prestasi apa saja yang telah dicapai sejak tahun x ? Apa hal terbaik yang kamu lakukan hari ini ? Berapa banyak hal yang telah dilakukan pada minggu kedua di bulan Agustus ? Seberapa jauh otak mu berkembang ? Apakah kamu memiliki ide yang luar biasa ? Apa pendapatmu tentang x ? Apa yang kamu lakukan pada hari x ? dan seterusnya. Saya berasumsi bahwa anda sudah memahami GTD . Hal yang ingin saya tekankan bahwa anda tidak harus memiliki komputer atau pun ponsel cerdas untuk mengimplementasikan sistem ini dalam hidup anda. Pahami konsepnya, kemudian implementasikanlah sesuai alur hidup anda. Tentu anda dapat menggunakan buku tulis untuk mengimplementasikan sistem ini. Hal-hal yang tidak termasuk todo – masuk ke bagian referensi –. Saya bagi menjadi : Wish Success Questions Life-problems Ideas Hevents Moments Thought Wish Keinginan yang membutuhkan waktu panjang – terkadang tidak dapat diprediksi –. Saya letakkan di wish-long . Keinginan yang dapat saya capai dalam waktu pendek saya letakkan pada berkas wish-medium . Success Berkas Success berisi hal-hal yang saya lakukan dalam waktu satu hari. Pekerjaan seperti mencuci, membersihkan kamar tidak saya anggap sebagai sebuah \"kesuksesan\". Kesuksesan atomic yang diraih sehari-hari saya letakkan dalam berkas success-atom . Sedangkan kesuksesan yang tidak dicapai dalam hitungan hari, saya letakkan pada success-small . Kesuksesan besar saya letakkan di success-big . Beberapa contohnya : Success-atom Success-small Success-big Dengan sistem success . Saya dapat mengukur tingkat produktivitas dalam hitungan hari, bulan maupun tahun. Berkas success-atom dapat merefleksikan seberapa produktif kita dalam hari-hari tertentu. Hal ini juga dapat membuat kita selalu bersyukur. Seringkali saya merasa sedih. Merenungkan waktu-waktu yang dihabiskan secara sia-sia. Dengan adanya sistem success , kesedihan yang sering saya alami – karena merasa selalu tidak produktif – dapat dihindari. Melihat task yang telah diselesaikan pada hari-hari tertentu membuat kesedihan tersebut hilang. Semangat, rasa percaya diri dan rasa mencintai diri akan timbul ketika kita dapat mengukur bahwa kita sudah mengeluarkan usaha yang maksimal. Question Saya mengelola semua pertanyaan yang timbul di kepala. Hal ini dapat menjaga saya untuk selalu skeptis dan selalu mendorong diri untuk tau apa yang terjadi di belakang layar atau bagaimana sesuatu bekerja. Dengan sistem ini, kita dapat mengukur tingkat ketajaman pertanyaan pada suatu bidang seiring berjalannya proses belajar. Pertanyaan-pertanyaan tersebut dibagi menjadi kategori-kategori tertentu. Anda dapat membuat kategori-kategori lain sesuai kesukaan anda. Ask-code Ask- GNU -other Life-Problem Ketika masalah menghantam dalam hidup. Saya menyadari kemampuan manusia yang nihil tanpa pertolongan Allah. Sehingga saya titipkan semua masalah pada Allah. Kemudian berusaha menyelesaikannya dengan usaha manusiawi. Menuliskan masalah, membantu kita fokus kepada current task tanpa dihantui hal-hal lain. Tidak terganggu akan masalah-masalah di luar kendali. Masalah-masalah yang terdokumentasikan dengan baik. Membuat kita memiliki \" pohon-permasalahan \". Sehingga kita dapat bertemu keluarga dengan senyum merekah. Ideas Saya mendapatkan ide ketika mandi, melihat masalah di jalan, di kelas, dan lainnya. Semua ide tersebut dicatat dan didokumentasikan pada berkas ini. Ide-ide yang ada nantinya dapat digunakan untuk memulai programming-project atau pun penelitian. Hevent (Historical Events) Saya menyukai sejarah. Peristiwa-peristiwa bersejarah yang dialami saya pribadi, keluarga maupun keluarga besar akan didokumentasikan pada berkas ini. Berkas ini membantu kita menyampaikan apa yang telah diperjuangkan orang-orang terdahulu di dalam keluarga, mengingat jasanya dan membalas budi kepada ketuturan-keturunannya. Selain itu, berkas ini membantu keluarga lain yang lupa dalam mencatat peristiwa penting yang dialaminya. Berkas ini memuat hal-hal seperti kelahiran anak, pernikahan, kematian, perkumpulan keluarga, perjuangan dan seterusnya. Moment Saya berusaha untuk mensyukuri karunia-karunia yang telah Allah berikan kepada saya. Contoh kecilnya dikala saya mendapatkan traktiran, diberi harga murah oleh ibu penjual nasi atau pun mendapat sesuatu dari teman. Salah satu contoh ketika mendapat rezeki dalam hal makanan. Saya merasa tidak efisien jika mendokumentasikannya dengan foto. Karena moment-moment tersebut akan terus muncul. Proses maintance -nya pun tidaklah mudah. Selain itu, foto-foto tersebut tidak memiliki manfaat bagi orang yang melihatnya, karena mudah didapatkan di internet . Sehingga mendokumentasikannya dengan narasi saya rasa lebih efisien. Thought Seringkali pemikiran-pemikiran akan suatu hal mencuat dalam otak. Baik ketika bercengkerama bersama teman, mandi, menyetir atau pun mendengarkan materi. Pemikiran tersebut saya dokumentasikan dalam bentuk garis besar berupa komentar, pertanyaan atau pun pernyataan. Isi berkas tersebut nantinya akan ditindak lanjuti dengan penelitian yang kemudian menghasilkan essai, artikel atau bahkan buku. Evaluation Berkas Evaluation memuat kesalahan-kesalahan yang seharusnya tidak dilakukan. Berkas tersebut dibagi menjadi evaluation-big dan evaluation-atom . Seperti pada berkas-berkas sebelumnya, *-atom menandakan bahwa isi didalamnya bersifat harian. Berkas ini berhak mendapatkan waktu khusus untuk direnungi. Sebagai usaha agar kita menjadi pribadi yang selalu berbenah dan lebih baik. Log Log merupakan berkas yang mencatat rekaman perubahan sistem-sistem di atas. Perubahan-perubahan alur kerja ( workflow ), notasi atau kategori dalam sistem direkam pada berkas ini. Dengan data log , kita dapat melihat bagaimana perjalanan hidup dalam mengatur sistem diri. Dimulai dengan sistem yang sederhana, mengalami perubahan-perubahan, hingga menjadi sistem seperti saat ini. Tentunya perubahan-perubahan tersebut juga merefleksikan bagaimana diri kita semakin terbentuk dan berkembang. Alhamdulillah. Log Life Log Machine Penutup Nama-nama berkas pada sistem di atas dapat anda ubah sesuka hati. Anda pun dapat menambah berkas-berkas baru sesuai dengan alur kehidupan anda. Beberapa berkas di atas memiliki irisan satu sama lain. Salah satu contoh: Item dalam success-atom \" Memahami foo dalam bar\" juga terdapat pada berkas ask \" Apa itu foo dalam bar ?\". Saya menyukai perjalanan sejarah. Sehingga hampir semua item dalam berkas-berkas tersebut diurutkan berdasarkan waktu. Catatan Figur-figur di atas hanya sebagai contoh belaka. Tidak untuk dijadikan referensi maupun untuk berbangga diri. Changelog Initial publication : Saturday, April 7, 2018","loc":"https://azzamsa.github.io/mengatur-berkas-referensi.html","title":"Mengatur Berkas Referensi"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/about.html","text":"My name is Azzam Syawqi Aziz. I am originally from Madura island , Indonesia. But I've been continually move to different place to seek knowledge since I was 13 years old. I love learning Computer Science stuff, creating various things and sharing about it. The most exciting role is being part of Free Software ecosystem. Contribution to me like the breath of life, I've contributed to various Libre Software projects. I am excited to share and discuss about it, yes anywhere ! Apart from Computer Science, I love to make what I call ‘life templates'. I am learning how to life (learn, think, manage time, money, etc) efficiently. At the same time I am exploring the goal of life. This is what I call ‘straight path algorithm'. For more professional details – check out my cv . You can find me on Twitter , GitHub and Gitlab Contact You can ask me in my AMA if you feel our discussion will be useful for others. For private things, use . This is my public key if you concern about security and privacy.","loc":"https://azzamsa.github.io/about.html","title":"About Me"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/talks.html","text":"Talks and Presentations Academic Talks [Lecture] \"Free Software Free Society\". Lugos. Man 1 Malang, Malang. November 11, 2017. [ Video or Video - Photos - Slide ]. [Lecture] \"Introduction to Python\". Pondok Mahasiswa Kumis Kucing Dalam, Malang, April 11, 2018. [ Photos - Slide ]. [Lecture] \"why do ‘we' exist\". Diklat POROS . Villa Putih, Batu. April 21, 2018. [ Video - Photos - Slide ]. [Lecture] \"From Git to Heaven\". Gathering Keilmuan POROS . Filkom, Brawijaya. Malang. May 05, 2018. [ Photos - Slide ].","loc":"https://azzamsa.github.io/talks.html","title":"Talks"},{"tags":"MYPAGE","url":"https://azzamsa.github.io/projects.html","text":"These are projects I've worked on or working on. See here for my contribution to FOSS projects and here for my college projects CS Code pomoshoro - Simple pomodoro script to boost focus and productivity Built with: Bash, YAD . ASK Indonesian Wordlist - Indonesian Word List for AnySoftKeyboard Built with: AWK , Python. ASK Indonesian LanguagePack Indonesian Language Pack Built with: AWK , Java template-tugasakhir-latex - Kumpulan template latex untuk tugas akhir Built with: LaTeX Non-Code Awesome-cl-software List of awesome application software built with Common Lisp fs-filkom-list - Libre Software Application list for filkom class Lisp-logo - Lisp Logo awesome-lisp-companies - Awesome Lisp Companies Translation See Here Others Gntr Wiki - Unofficial gontor wiki Berhitung KMI - Rumus berhitung untuk KMI Gontor","loc":"https://azzamsa.github.io/projects.html","title":"Projects"},{"tags":"Code","url":"https://azzamsa.github.io/read-number-to-list-in-common-lisp.html","text":"It tooks me more one and half hours to to figure it out \"how to take number (interger) form user input and make a list from it\". The trivial solution is pretty simple if the we pass the input like this as a list (1 2 3 4 5) , we just need ( defun buat-list ( input ) ( list input ) ( format t \"~a\" input )) Taking more than one hours to figure it out, I find the this solution but the input must not contain any white space 1234 ( defun number-to-list ( n ) ( loop for c across ( write-to-string n ) collect ( digit-char-p c ))) When I look for the solution reading some SO questions and CLHS I find some solutions Coercing numbers to lists in common lisp Take an array of numbers from standard input in Common Lisp But none of them suit my needs, because even they works fine in my SBCL machine, they will failed in HackerRanks test cases, maybe because they handle the input differently. This Solution with some modification works on my SBCL machine, but not in HR test cases ( defun readarray ( &rest args ) ( values ( read-from-string ( concatenate 'string \"(\" ( apply #' read-line args ) \")\" )))) After spending so much time thinking how to read the HR input nicely, I am forget that HR provides this function at the beginning of the warm up question, and this function works nicely. thanks HR guys . ( defun read-list () ( let (( n ( read *standard-input* nil ))) ( if ( null n ) nil ( cons n ( read-list ))))) Because the input in HR is not like these \"1 2 3 4 5\" \"12345\" (1 2 3 4 5) but like this 1 2 3 4 5 , no quotes and no parens I am verry happy because this is my first time I posted about practical things in programming. Happy hacking.","loc":"https://azzamsa.github.io/read-number-to-list-in-common-lisp.html","title":"Read Number To List In Common Lisp"},{"tags":"CS","url":"https://azzamsa.github.io/simple-org-mode-cheatsheet.html","text":"I made this this org-mode cheatsheet as simple as possible, this cheatsheet intended for contributors who want to contribute project with org-mode as readme file. Heading * H1 ** H2 *** H3 Emphasis /italics/, *bold*, _underline_ ~inline code~, =verbatim text= ,+deleted text+ super&#94;{script}, sub_{script} List Unordered lists - Animal. - Fruit. + Apple. * Red Apple. Ordered lists 1. Animal A. Lion a. Red Lion. b. Blue Lion. B. Tiger. 2. Fruit. Links [[http://orgmode.org/][Org mode Web site]] automatic http://www.gnu.org (automatic!) Image links [[http://orgmode.org/][file:images/org-mode-unicorn.png]] Inline anchors Anchors are used to specify hypertext link targets. <<anchor>> Inline anchors make arbitrary content referenceable. Images [[ / img / org - mode - unicorn . png ][ Monocerus glaucus ]] Image with captions #+CAPTION: Monocerus glaucus #+ATTR_HTML: alt=\"Monocerus glaucus\" [[[[/img/org-mode-unicorn.png]]]] Image positioning # + ATTR_HTML : style = \"float:right;margin:0px 0px 20px 20px;\" [ [ / img / org -mode-unicorn.png ] ] Lorem ipsum dolor sit amet , consectetuer adipiscing elit , sed diam nonummy # + ATTR_HTML : style = \"float:left;margin:20px 20px 20px 0px;\" [ [ / img / org -mode-unicorn.png ] ] euismod tincidunt ut laoreet dolore magna aliquam erat volutpat . To learn more about images, read Images and XHTML export Code and Syntax Highlighting inline ~foo~, ~baz~ source code block #+BEGIN_SRC lisp #+END_SRC Tables | a | b | c | |---+---+---| | 1 | 2 | 3 | | 4 | 5 | 6 | Document settings #+OPTIONS: #+STARTUP: for startup: showeverything align for options: toc:nil = don't preserve table of content num:nil = no numbering H:4 = heading level \\n:t = add new line (\\) for more information see Export Options Credits Org mode syntax reference card by Fabrice Niessen Markdown Here Cheatsheet by Adam Pritchard The compact Org-mode Guide Images and XHTML export","loc":"https://azzamsa.github.io/simple-org-mode-cheatsheet.html","title":"Simple Org-Mode Cheatsheet"},{"tags":"Code","url":"https://azzamsa.github.io/my-lisp-faq.html","text":"this is the common FAQ of LISP language programming, the FAQ is built to avoid so many wasted time spending hours just to browse the web, looking for any repeated useless question, rahter than practice. this FAQ , is not intended for public audience, I write this article as the answer for my self, so maybe this is not for you, because the situation maybe vary. FAQ should I learn Lisp (or Scheme) ? Yes, if you if you don't take any university class when reading this document, by mean you have more free time than university student, I highly recommend you to pick one of the Scheme implementation, and start learning. No, if you if you student at university, I have to say that it's likely you have \"default\" programing language that your university choose, mostly Java or Python. don't feel such in hurry to learn Lisp, it's better to learn what your university pick for you, maybe it's hard because you want to learn another programming language, but for the first timer the importance is to learn how to know the fundamental things in programing (Identifiers, Data Types, Literas, Array and so on) , after you grasp the syntax and the paradigm of the programming language, it's not enough . You need to practice it, read other's people code, write more code, and do deliberate practice, solve programming poblem in project euler, codechef or other. if you take Lisp with you when you still learning the basic of programming, you will have less time to practice(the default language), and when you don't practice enough, you can't accomplish your taks from your lecturer or you can't do so much contribution in your shcool project team. when you grasp the programming skill you can now learn other languages, based on paradigm. You can't say one language more beautiful and well-design than other if you are medium programmer, you can judge something when you master it, and you can love something when you master it. I doubt with people saying \"I like foo\" when it is the first day he learn it, mostly they do because following other people. When you added more language to your programming skill list, your view and programming skill increased, and at this point, you can pick the language based on your liking but I hate java ? some folk (including me) heard so many people hate java, even the funny thing is, I ever visit this project page , and I find \"Never discriminate (even if you like Emacs and Java).\". the first time I introduced java in my university, I was shocked, because as far as I know, the community more likely like Pyhton than java. I spend so many time spending time to think,sent emails here and there asking for advice, especially when I read \" Free but Shackled - The Java Trap \", so I spend some days figuring out. I find the answer for my self as below: \" free but shackled\". of course I can pick other programming languge, but at November 13, 2006 java relased as free software. so you can use OpenJDK, hack it, build something awesome with, and get your freedom. \" Java got so many critique\". beside being popular, java got so many critique about design and so on, but always remember that Java is just a tool, it is not religion that you will bring forever. it's a tool for solving problem. I do hate java before, but when Mr.Windiarto Nugroho built his SIMRS in java , and relased as free software, so many hospitals adopt it . it's not about the language, library, framework you use, but how contribution you give to society what is the difference beetween OpenJDK and OracleJDK ? as stated here Q: What is the difference between the source code found in the OpenJDK repository, and the code you use to build the Oracle JDK ? A: It is very close - our build process for Oracle JDK releases builds on OpenJDK 7 by adding just a couple of pieces, like the deployment code, which includes Oracle's implementation of the Java Plugin and Java WebStart, as well as some closed source third party components like a graphics rasterizer, some open source third party components, like Rhino, and a few bits and pieces here and there, like additional documentation or third party fonts. Moving forward, our intent is to open source all pieces of the Oracle JDK except those that we consider commercial features such as JRockit Mission Control (not yet available in Oracle JDK ), and replace encumbered third party components with open source alternatives to achieve closer parity between the code bases. Notes pick one and start. don't waste your time comparing foo with baz, baz with bar, or comparing one implementation to other. for beginner the most important thing is to understand the fundamental things of programning (Identifiers, Data Types, Literals, Array and so on). don't take other people rant's, those rants (language design, inconsistency,speed) is not for you as beginner. there will be a time when you can choose a language that suits your heart's will , pick one and start . it's not that hard to learn other languages. when you see Bozhidar Ivanov Batsov CV , you will see I'm currently the CTO of Tradeo Inc., where I develop and supervise various Ruby on Rails and Node.js applications. Before that I've worked as Java developer (Swing, JavaEE, etc). Before that I used to be a C++ developer and before that I developed Linux kernel drivers for some embedded devices. As you can see I've gradually transferred from low-level to very high level programming – hopefully this will preserve my sanity for a while. and Peter Seibel wiki page : Basically, I spent a bunch of time hacking both Perl and Java and some with Python and most of my friends and colleagues are smart Java programmers. Most of them have heard that Lisp is pretty cool but are also sceptical about it on many levels. I want to write a book that will reach them. Most of the good Common Lisp books out there are a bit dated (Paul Graham's excellent books were published almost 10 years ago) and tend to assume that the reader is already pretty motivated to learn the language. So I'm trying to help bridge the culture gap. Peter Seibel also the one who sent an email to Joshua Bloch, convince him to implement chained exception in Java. Peter Seibel's answer for my question. Hey, I never answered your earlier DM . There are definitely people who get paid to use Clojure. And here and there proper making a living with Common Lisp. But if I learned over thing from writing Coders, it's that languages don't matter that much. Which USD nitty you say that learning a bunch of languages isn't useful. Anyway, best of luck and happy hacking! Romi Satria Wahono once said Operating system, programming language, software and technology a tool (tool) that we must master and use to solve problems. The tool is impermanent, and not a religion that must be embraced or broadcasted for life. Dependency on a tool is folly. The coachman's debate about the tools and mutual cursing or dug up a tool is futile, because they each have their own advantages and disadvantages Links Why is everyone in such a rush? Java's Cover Beating the Averages The Perils of JavaSchools Articles and Essays - schemers.org How To Become A Hacker - Eric Steven Raymond How I do my computing - RMS","loc":"https://azzamsa.github.io/my-lisp-faq.html","title":"My Lisp Faq"},{"tags":"Life","url":"https://azzamsa.github.io/petani.html","text":"Petani saya hanya seorang petani biasa. saya belum pernah panen besar, hanya saja saya senang mengajari orang bertani, semangat memberikan arahan, karena hati saya memjadi adem ketika saya melihat orang yang sukses panennya. karena semangat saya tersebut, mereka mengira saya petani besar, padahal ya sama saja, masih baru belajar pegang cangkul, hanya saja sering kali saya terlihat semangat, sehingga orang mengira saya pintar bertani. Farmer I am just an ordinary farmer. I never had a big harvest yet. it's just because I love to teach other farmers, having great spirit when giving them direction. I do so, because my heart is feeling cool when I see any person succeeds in their harvest. because all that attitude, they think I am a big farmer. whereas, I just also start learning to hold the hoe, sometimes they look my self have great spirit, so they think I am a smart farmer.","loc":"https://azzamsa.github.io/petani.html","title":"Petani"},{"tags":"CS","url":"https://azzamsa.github.io/how-i-came-to-know-gnulinux.html","text":"first sight I never hear the term \"Linux\", the first time I hear term \"Linux\" is around 2010, when my school migrated all the computers in Ninxia building to Ubuntu. all the computers is used only for surfing the web, each student have to pay the small amount to rent the computer. Ubuntu somehow does not attract my attettion, until in the end of 2012, I heard that we can get the official ubuntu cd and sent directly from overseas. that time I came to Mr.Fajrin, he is the chief of my school computer center, but sadly he said that the ubuntu service for sending cd's is already shut down. after that time, I never think about \"linux\" nor \"ubuntu\". the sun rises In 2013, I relocated to stay temporary in Aceh, the corner city of Indonesia, teaching some students. One day I feel distracted by the license of Microsoft Office, and I felt guilty if I try to crack it more and more, I also think that if I depend on this app, by using it in such imperfect way, it will harm me someday. so I go to the city of aceh, it tooks around 3 hours to get there. I bougt the cd of OpenOffice, and install it on my ex-windows. one day, I remembered about \"Linux\" \"Ubuntu\", so I search accross the Internet and I find ubuntu.com, I need 3-4 hours to download the iso of Ubuntu 14.04 LTS , I am pretty happy after installing it alongside my windows 8. Since then, I rarely open my windows 8. I really remember, the first day on Linux, I have so many question, I joined \"linux group\" in facebook with lot of people, my first post was really fun, I wrote wrong version of Ubuntu 14.04 become 16.04, and everyone confiused. I also have a post that get so many comments and reaction asking about \"Which one do you choose, your tux or your wife\", this is intended for fun of course, the are some people who really help me a lot in the beggining of may linux day e.g Mircea Toader and some other. I ask Mircea how to do this and that, he is very kind, sometimes he explained that he is far away from home and will answer later, these day, I think the missing part of linux is the app that I need in grapich works, such SONY Vegas, ADOBE After Effect, and so on, now there is the app that fill this gaps, e.g Natron and the king, Blender. Later, I meet with so many kind person, Epsi N.W who points me to read the Debian Manual Book, and I am still a good friends with him until now. Ragil Satrio who I find in Linux forum, he point me out how to solve on my GRUB error, and become best brother until now. and of course there are some people in Ubuntu Indoensia forum and Ayo belajar linux who also help me a lot. Linux grows more and more in my school at aceh, We installed all the computer lab's with Linux, some people comes to install Ubuntu on their laptops, some of them Abthal dan Bayu, Bayu start using Ubuntu and do his task with Ubuntu rather than windows. the Head Master of the school heard this progress, saw my announcement in the wall magazine here and there, maybe he is happy, sometimes he called me \"ustadz Linux\". Even he asked me to install Ubuntu on his laptop, but I refuse, because to use \"Linux\" we are required to have the ability to solve technical problems independently, searching the problems, asking people, nowadays \"linux\" such Ubuntu is really comfortable for begginers, but I am afraid no one to ask when I leave that school, cause in the following months I will leave. because to use \"Linux\" we are required to have the ability to solve technical problems independently, searching the problems, asking people. I put a lot of effort for this school labs, including asking fund for more machine to external organization, I got two more machine from this. and later the goverment gave us about 20 laptops. I leave this school in the mid of 2014, with good school labs, and one machine with Linux Mint with big HDD capacity, to store all school data, because in previous years all the old school data is broken by viruses in windows. I leave this school and relocated to Surabaya, I meet with the nice guy named \"Ade Malsasa Akbar\", he explain me lot of things, I learn so much from him, he is really humble. after partition mismatch incident I removed all my Oses, and Installed only Ubuntu, 7 months later I relocated to Malang. the flag fluttering I learn more about \"linux\" in Malang, reading so many wiki pages, reading stackoverflow questions, and saving it to maff format. I don't want my history of what I learned is gone, so I downloaded every page that I read in maff format. when that time, I really don't want to lost any tiny information, when I stuck in something and I found the answer, I downloaded the whole page of the answer, also pages in stackoverflow, when I read someone blog, I downloaded the whole pages, I think by doing this, I can keep the information safe with me. but later it's very hard to maintain a great collection of maffs, so I search a new way to do the documentation of my history of learning. I really remember when I afraid because of the app crash, or the system going mad, these was my first day in GNU /Linux, but months after months I know how to fix things, how to ask in forum, sometimes miracle happened, someone come to help when I stuck. I spent every days using \"Linux\" and start configuring here and there. Later in 2015 I moved to Debian, and never looked back. this is the starting point where I read about GNU , reading some of FSF books, knowing the difference beetween foo and baz, the gaps beetwen x and y, a and b, c and d. and lot of more. I become more sceptical, I read wikipedia more, read book more, read a lot of GNU history, Linux History, Minix history, Learning about Licenses, learning the difference beetwen GPL , LGPL , AGPL , BSD , new BSD , MIT , Apache and more. knowing foo community and baz community, joined IRC and meet with so many people. If I don't know GNU /Linux maybe I don't understand the Licenses, I don't know so many great programmers, great scientist, the composition of the Os, the kernel, I don't meet people in IRC , i don't colaborate using vcs, and I don't know difference between GNU and Linux, Stallman and Linus and so many things. GNU Project open my minds, I read lot \"Freedom\" and \"Society\" including reading Richard Stallman essays and Lawrence Lessig books, I learn how to give a software sincerely. I know what is the bad and harm for works, I can differ more about things. I want to thank to many people who puts their great effort to make so many software, until we possibly run the complete free operating system. thanks for everyone for this, BSD foundation, X.org foundation, Free Software Foundation, Linux Foundation and more. GNU /Linux really colouring my life, give me more skill in technical aspects, and knowing so many secret ingredient and the paradigm of life, not to forget that it also motivate me to learn more and more. thank you everyone who contribute to this community. Article Changelog 22.08.2017 3:39 AM First Publication 14.09.2017 4:22 PM adding more words","loc":"https://azzamsa.github.io/how-i-came-to-know-gnulinux.html","title":"How I Came To Know Gnu/Linux"},{"tags":"CS","url":"https://azzamsa.github.io/list-of-apps-i-use-and-why.html","text":"I will write the list of apps that I use to finish my task. This list of applications does not mean to say that foo app is better than baz app, every app has it is own audience. other than that, I keep this list to know what app that I have to consider my self to donate. the last line is the current app I use. Applications Audio music player audacious (past 3 year) I like the tabbed playlist UI from audacious, and I think this is the only music player in GNU /Linux that has tabbed-playlist - cmus I love tabbed-playlist, fortunately cmus can :load and :save playlist. audio editing audacity Accounting hledger Really helped me, I enjoy using it, rather than using LibreCalc to track my transaction. Chat Clients Quassel (past 2 year) Hexchat (past 1 year) Irssi Data Backup and Recovery DejaDup (past 1 year) Borgbackup Desktop customization Arc Theme La Capitaine Icon Theme Papirus Icon Theme Development Database DBeaver MyCLI MySQL MariaDB Java Netbeans PHP Laravel Common Lisp SBCL quicklisp SLIME Supporting tools Git Pencil Editors Emacs I do everything with text mostly with emacs. from taking notes, maintainging TODOs, writing code, and etc. Kate (past 2 years) Mousepad only for supplies. Email Mutt File Manager Nemo (past 2 year) Dolphin (past 1 year) Midnight Commander Thunar Most of the time I use MC , but in some occasion, I launch Thunar. Graphics Graphic Creation Inkscape Image Editor GIMP Image Management Gwenview (past 1 year) feh feh does not support viewing gif, so I move to xsiv - xsiv Screen Recorder kazam Screenshot Kscrenshot (past 1 year) scrot Gif Silentcast. I use Silentcast since 1.5 year ago. but moving to i3 make Silientcast does not work, but wait :). I already solved , thank lot Sir Colin Keenan . Video editor Kdenlive I think I have to try Flowblade to avoid KDE depedency. Internet Firefox Firefox Extension Office LibreOffice Org-mode Productivity Chill and Relax ambient noise ( now, I just play the sound file with mpv) mpv I move to mpv to play multiple sounds, because I think I just waste my RAM to run Apache just for playing this ambient. I use the script, put in PATH , so I just run it, whenever I want. bash #!/usr/bin/env bash cd /var/www/html/chillnsound/app/sounds (mpv beach.mp3 --loop-file &);mpv birds.mp3 --loop-file thanks ignite PDF Tools Okular willy nilly, I have to use it, even it comes with many KDE depedency, no other tools in GNU /Linux that support multiple features for anotation. I also like the way Okular anotates the pdfs by saving the xml for each pdf to it's folder. So I can easily share the clean pdf with my friends, and export the anotation when in case I need. Security keepassX I don't try keepasXC yet. pass is also awesome, I will give it a try later. - GnuPG Sharing Files aria2 Filezilla I use to share files beetwen my andorid and laptops. Terminal Konsole ( past 2 year ) Tmux Uxrvt since I have Tmux, I can work on any terminal emulator. Utilities Gramps geanalogy software NCdu Syncthing I use Syncthing to sync ebooks and org files accross my devices. Nitroshare I use nitroshare when someone ask big files from my machine, I use it with crossover cable. before nitroshare, I use dukto. Octopress I use octopress for blogging. autojump Love it. Video mpv I use it most. - vlc only for supplies. Virtualization Qemu- KVM I use qemu to experiment with fresh debian without harming my productive machine Virtualbox only for supplies. Wiki Software Ikiwiki Writing Beamer - A LaTeX class for producing presentations and slides. Latex - LaTeX is a high-quality typesetting system; it includes features designed for the production of technical and scientific documentation. Org-mode - Org mode is for keeping notes, maintaining TODO lists, planning projects, and authoring documents with a fast and effective plain-text system. Desktop Environments i3-gaps xfce only for supplies. Display manager LightDM Andorid swiftp Syncthing client Emacs Packages Auctex - AUCTeX is an extensible package for writing and formatting TeX files in GNU Emacs and XEmacs. Helm - Emacs incremental completion and selection narrowing framework. Porjectile - Project Interaction Library for Emacs. Org-mode - Write notes, GTD , authoring, publish and wash dishes. Ox-gfm - Github Flavored Markdown Back-End for Org Export Engine Markdown-mode - a major mode for editing Markdown-formatted text files in GNU Emacs. Zenburn - (dark) Vim's \"Zenburn theme\" ported to Emacs. Programming Company - Modular in-buffer completion framework for Emacs. Emmet-mode - Emmet's support for emacs. expand-region.el - Emacs extension to increase selected region by semantic units. Flycheck - On the fly syntax checking for GNU Emacs. Magit - It's Magit! A Git porcelain inside Emacs. use-package - A declaration macro to isolate package configuration in a way that is performance-oriented and tidy. smartparens - Minor mode for Emacs that deals with parens pairs and tries to be smart about it. smart-mode-line - A sexy mode-line for Emacs. Super-save - Save Emacs buffers when they lose focus. Rainbow-delimiters - Emacs rainbow delimiters mode. Web-mode - Web template editing mode for emacs. WhiteSpace - Minor mode to visualize TAB , ( HARD ) SPACE , NEWLINE . Article Changelog 31.08.2017 Initial publication","loc":"https://azzamsa.github.io/list-of-apps-i-use-and-why.html","title":"List Of Apps I Use And Why"},{"tags":"CS","url":"https://azzamsa.github.io/my-machine-setup.html","text":"Preface The first time I come to GNU /Linux at 2014, installed my machine using Ubuntu 14.04 LTS , using Unity as my DE , and dual-booting with Windows 8. At 2015 when I got partition miss-match , I removed all my OSes, installing just Ubuntu 14.04, since then I never touch Windows Os until now*. In the end of 2015 I try to learn GNU /Linux more, I think I have to migrate to Debian , because it is the base of most GNU /Linux distribution, I think if I use Debian and accostomed with it, and make my Os of choice, I can dive deep into GNU /Linux world. Unlike others, I tend to spend very long time to decide my choice, because I don't like to move or switch, so i really choose what is best suit with my self. I decide to choose Debian and love it, I want to learn debian to it's root. respect Debian for it's DFSG . so I removed my Ubuntu and start using Debian in the end of 2015. using Debian more than 2 years with KDE , I am pretty satisfied, I have all my tasks done on Debian. But because I am running some heavyweight app as like Netbeans in my low end machine, I consider to buy another machine after having enough money. Two weeks ago I bought new machine, I am sure now I can be much productive with it, including acomplishing my old dream to contribute here and there. Rationale Before, I was an huge fan of KDE , I love many of KDE features, KDE has great detailed setting, I like the ability to put images on the top of the wallpaper, it's called \"image frames\", because I like to see many images at one time for my learning motivation. Moreover, I am the hard user of Okular and KOrganizer, until know I did not find any replacement for them. After KDE Plasma 5 Release, Plasma 5 make me think twice, Plasma 5 has many great and shiny features that I don't need. I think if I depend on KDE to accomplish my work, it will hard for me to switch to new machine and start working. In work, I am required to have a machine and apps that easy and fast to set up.I don't need that shiny features for me to have my task done, and of course it has so many dependency on KDE . this is the starting point when I think that I need to build the portable machine , by mean, that my machine configuration can be easily move beetween one and other, so I can start working on new machine and just need couple of minutes to set up. To achive this, I need apps that have small depedency on eiter Gnome or KDE and other packages as well and I need scriptable app config. My Set up this is my machine looks like: so I came with this, Window manager : i3 I love Common Lisp, so it is good for me to improve the study of Lisp with hacking on StumpWM, But I need so much time to configure it, I got so many erors and can't figure it out how to solve, StumpWM is great, but lack of documentation, wiki and community support, so it's a bit pain for any person who first come to Window Manager like me, I search other option, the second phase candidate are i3 and xmonad. Because 6 months ago I installed i3 on Debian in VirtualBox, and I can use i3 with just copule of minutes. It start when I read ESR blog about his machine, and he is using I3, so I give it a try, i3 is very easy to learn. and when installing this new machine. I chose i3. I have xfce installed, just in case,if any emergency and I need a Desktop Environment. I choose i3-gaps rather than original i3, with the gaps configuration gaps I use is : # set gaps (i3-gaps only) gaps inner 10 gaps outer 0 the result is I always have the gaps beetween windows when I make the windwos tiled. I use emacs extensively so I change the default modifier key to Mod4 instead of Mod1 , I use rofi to lauch program and run command, and using rofi feature to switch beetween windows. bindsym $mod+Shift+d exec rofi -show run -opacity 90 # list open windows to switch to bindsym $mod+Tab exec rofi -show window -opacity 90 i3 is hybrid, so you can use tabbed layout, stacking layout or default layout. I use named workspace or tag so I can easily remember what is the content of the workspace e.g term for workspace number 1, net for workscpae number two, and so on. You can move the window to another workspace using Mod+Shift+(any number) . I use some additional config to make i3 bar more pretty, using FontAwesome font to display nice icon in i3status, I also change the time to use ISO 8601 time. Sometimes I use touchpad for browsing, so I put this line exec --no-startup-id synclient VertEdgeScroll=1 TapButton1=1 TapButton2=3 TapButton3=2 to configure synclient when i3 start, to use more complex setting, you can refer to arch wiki for shutdown, reboot, suspend and lock, I use nice script that I get from V0id in i3 forum , #i3 shutdown, reboot, suspend, lock set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown mode \"$mode_system\" { bindsym l exec --no-startup-id ~/.config/i3/i3exit lock, mode \"default\" bindsym e exec --no-startup-id ~/.config/i3/i3exit logout, mode \"default\" bindsym s exec --no-startup-id ~/.config/i3/i3exit suspend, mode \"default\" bindsym h exec --no-startup-id ~/.config/i3/i3exit hibernate, mode \"default\" bindsym r exec --no-startup-id ~/.config/i3/i3exit reboot, mode \"default\" bindsym Shift+s exec --no-startup-id ~/.config/i3/i3exit shutdown, mode \"default\" # back to normal: Enter or Escape bindsym Return mode \"default\" bindsym Escape mode \"default\" } bindsym $mod+Pause mode \"$mode_system\" in Lenovo laptops, pause are bind to fn+b sometimes I tend to forget abot my battery precentage, so I use i3-battery-popup script from Reindert-Jan Ekker which really nice and helpfull, it uses tk as default GUI toolkit for poping up a warning. To take screenshot, I use scrot. My current scrot setting is fine. But someday I want to have the ability to give a name of screenshot, this can be achived using scrot feature scrot -cd 4 'foo.png' , but to use this i have to excute the command on terminal and switch to app, maybe it will be nicer if we put zenity pop-up to ask filenames, but it will be bloated feature I think. Don't forget to reload your i3 configuration after you made some changes, with Mod+Shift+C , and you will see the changes, but there are some changes that you need to restart X or logout. Text editor : Emacs I heard of emacs long time ago, maybe around 4 years ago. I often hear and read someone mention emacs emacs and emacs, in 2015 I try to search what is the importance of using emacs or vi, and trying to code java just to know how it feel. I never try it again after that time. In the mid of 2016, I have one week of holiday for preparing second semester exam. In the first day I try to find new skill that I must have, I remembered emacs, so I try to search emacs tutorial, history and wiki. and I find Jekor's video, he explained how to use emacs for begginer in really great way, easy to follow and structured explanation. Since then, I use emacs to take notes, planning, self-management, writing letter, and code. even I use emacs in unversity exam of PHP programming You can read my history of my Emacs experience , I know others programmer or non-programmers, that heavily use emacs, on of them is Sacha Chua , she is very kind, she once said that even we love emacs, we have to know the basic use of vi, because emacs is not included in fresh instalation of OSes. thanks Sacha Chua for this advice. Emacs is my favorite editor, I manage my planz with org-mode, coding in emacs, writing daily notes, letter and other activity, I used to run pomodoro timer when I work with emacs, so I can focus on my work, and know when to take rest. you can read my emacs workflow Terminal Emulator : urxvt I need the simple terminal emulator. Before learning tmux, I need terminal that supports tabs, so I choose urxvt with some perl extension, but after learnin tmux, I can work on any terminal, because I can have panes and windows in tmux. I dont have so much configuration in urxvt, because I run tmux on urxvt. In urxvt, I just configure the colour to mimic zenburn, changing the font, disable the ISO mode because I do not need it. and adding some kebinding to change the size of font in the fly. !change urxvt font size on the fly URxvt . keysym . M - plus : command : \\ 033 ] 710 ; xft : InconsolataGo : pixelsize = 19 \\ 007 URxvt . keysym . M - minus : command : \\ 033 ] 710 ; xft : InconsolataGo : pixelsize = 14 \\ 007 tmux Great for productivity and programming. with tmux, I can have windows and panes, it make me easy to attach emacsclient with GUI here and there, opening multiple midnight commander in different panes. what I love in tmux is, I can have emacs-like keybinding, so I can easily move the cursor and copy the region. Tmux is one of the great piece of app that support my work, most of the configuration I took from kind person named Hamvocke. by the way, he had nice looking blog. I love the way hamvocke set up his tmux, with changing the prefix key to C-a , splitting using - and | is really fun, rather than using default \" and % , moreover he use metakey+arrow to move between panes, Great!. tmux use prefix and command keys, as like emacs does. I use emacs-like keybinding in tmux, and using this to copy and paste the buffer. # To copy: bind-key -n -t emacs-copy M-w copy-pipe \"xclip -i -sel p -f | xclip -i -sel c \" # To paste: bind-key -n C-y run \"xclip -o | tmux load-buffer - ; tmux paste-buffer\" so as like emacs buffer, to copy and paste content in tmux, start the prefix C-a , followed by command [ , and emacs keybinding to copy Ctrl+Space , using arrow keys to highligth region, and Alt+w to copy. To paste any content to tmux, just press Ctrl+y (yanking). So, in tmux I dont need urxvt keybinding to copy and paste Ctrl+Alt+V and Ctl+Alt+C or Shift+Insert . I also use tmux design that Hamvocke got from dothebarbwa's tmux design , it is cool. There is nice and shiny tmux config that show battery precentage, visual theme and lot of features from Gregory Pakosz , but I still does not need it. I think it focused for people who spent lot of time working in terminal emulator without any Windows Managers. File manager : Midnight Commander , SpaceFM , Dired+. before, I was a Dolphin filemanager user, but now I search the app manager that easy to move the config between macine, So I choose mc as my primary file manager. I like the Lynx-like motion, I can travel beetween dir so fast. because dired, sunrise-commander does not have Lynx-like feature ( and I think it never have, because everything is buffer), and for accessing some favorite dir, I use autojump. I dont configure it yet, in the following days, I want to have default open with in mc. now I just use mc wrapper for cd, and add bashrc config to not have duplicate history. I have tried ranger, but I dont like the Miller columns view, so I choose mc. In mc, I hold my horses using mc wrapper that take my pwd into current mc position, by using alias mc='. /usr/share/mc/bin/mc-wrapper.sh' in bash aliases. I can use mc edit, and mc bring me to emacsclient when I open a file. everything work well, but in future maybe I want to add default app to open this file and that file. Sometimes I use dired+. but lynx-like feature from mc make me move between directory really fast, and dired+ did not have progress information when moving files. Personal Management Korganizer is really great for this, but it is not simple enough, it uses akonadi and many depedency. Now, I am in searching for good personal management app for GNU /Linux. the candidate is osmo. after writing this sentence above, I type \"emacs calender foo\" and I am surprised,I immediately pulled away from the computer in surprise, I am really grateful, really unnoticed, I never expect to find this program, I have long Looking for a replacement for KOrganizer. I find Osmo, but I want a visual calendar that show my event or agenda in nice table. I really thanks to Masashi Sakurai for making this great app emacs-calwf . I will explore how it's work. Other apps I choose pdf viewer = okular, qpdfview for viewing random pdf's I use qpdfview, it fast and simple. but sometimes I need to anotate pdf, highlight, putting comments and etc. okular supports this. I like the way okular anotate the file, it does not add the anotation right away in pdf file, but using xml in separate folder. so I can easily share my pdf with my friends without bothering deleting all the comments and anotation or make the original copy first. You can share the pdf with anotation with export feature. network manager = wicd-curses before I use wicd-gtk, now I use wicd-curses. password manager = pass, keepassx I have 200 passwords, before I save it in protected odt, after 4 years, I moved to keepass2,Unwittingly I swam with a lot of mono dependency, so I want fully move to pass, and reduce my passwords to around only some little amount, to support this migration, I use keepassX. If you dont want mono depedency, I really recommmend keepassx over keepass2. you can use this migration script, to convert kdbx to kdb , but the recent version of keepassx support kdbx by default. Music Player = audacious. I dont like music so much, but sometimes I hear slow music from audacious, I like audacious UI , tabbed playlist, really cool. in everyday life, I hear some ambient noises, using local apache2 web-server, and open the app in firefox. thanks lot Stefan Petrovic . web browser = uzbl, firefox. scenshot = scrot automount = ~~udiskie~~, no it doesn't work in my Debian. I use udisksctl, it's really powerfull. to mount a device udisksctl mount -b /dev/sda<AnyNumber> to see the list of availiable device sudo fdisk -l my favorite one is turning off the devive, I often do this before plug off any external drive or usb-stick, this app is really great. udisksctl power-off -b /dev/sda<AnyNumber> . -b stands for block-device. thanks David Zeuthen for making this great app. display manager = lightdm shell = bash, I feel I still does not need fish or zsh. I have pretty bash prompt, taken from Nicolas Gallagher. I was stuck when trying to adapt it to my config, but TheBloke aka Tom Jobbins come to help and tidy it all. VCS = git. Sometimes, I use hg(mercurial), but most of the time I use git. I have pretty git log from Cătălin Mariș gitconfig. theme = Zenburn . \"Just some alien fruit salad to keep you in the zone\" . others = autojump. Thanks to… I use Anthony Campbell's i3 config as a base of my i3 config, because he provides comments, and I learn how to use named workspace and configure rofi form Epsi R Nurwijayadi config , inspired the bash prompt from Nicolas Gallagher cool bash prompt , love Hamvocke tmux keybinding , thanks for Chris Forno aka jekor I can't learn emacs without your videos you can see detailed information in my dotfiles repository I wrote this article, hoping you can take some insight on how to do some task in my daily workflow, maybe you can take small benefit from here. I am really glad if this article can help you. NB : English is not my mothertongue so any advice on grammar welcome. I dont write every tiny detail on how to do a or b in these apps, instead i just write what i love in my configuration , if you want to learn the complete tutorial you should visit emacs wiki , i3 manual , tmux tutorial from hamvocke (wow, Hamvocke article mentioned in tmux official repo, great job Hamvocke), arch wiki about urxvt , and hamvocke article about tmux is cool, jekor's videos for emacs begginers is really great. Sacha chua also talks many things about emacs. Article Changelog 2017-08-22 Initial publication change wicd-gtk to wicd-curses","loc":"https://azzamsa.github.io/my-machine-setup.html","title":"My Machine Setup"}]}